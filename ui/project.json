{"name": "Aviation_System_iter_1", "description": "None", "complexity": "12", "prompt": "update model", "connection_string": "", "port": "7533", "pid": "379", "directory": "/opt/projects/by-ulid/01JJ98C7JKSFXQS61M2BT8RCXP", "status": "Starting Project", "response": {"models": [{"classname": "Airport", "code": "class Airport(Base):\n    __tablename__ = 'airport'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    location = Column(String)\n    code = Column(String(3))", "description": "This table stores information about the airports.", "name": "Airport"}, {"classname": "Flight", "code": "class Flight(Base):\n    __tablename__ = 'flight'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    flight_number = Column(String)\n    departure_airport_id = Column(Integer, ForeignKey('airport.id'))\n    arrival_airport_id = Column(Integer, ForeignKey('airport.id'))\n    scheduled_departure = Column(DateTime)\n    scheduled_arrival = Column(DateTime)\n    aircraft_id = Column(Integer, ForeignKey('aircraft.id'))", "description": "This table stores information about flights including departure and arrival details.", "name": "Flight"}, {"classname": "Aircraft", "code": "class Aircraft(Base):\n    __tablename__ = 'aircraft'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    model = Column(String)\n    seating_capacity = Column(Integer)", "description": "This table captures details of different aircrafts.", "name": "Aircraft"}, {"classname": "Passenger", "code": "class Passenger(Base):\n    __tablename__ = 'passenger'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    passport_number = Column(String)\n    birthdate = Column(Date)\n    flight_id = Column(Integer, ForeignKey('flight.id'))", "description": "This table records the details of passengers.", "name": "Passenger"}, {"classname": "Pilot", "code": "class Pilot(Base):\n    __tablename__ = 'pilot'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    license_number = Column(String)\n    years_of_experience = Column(Integer)", "description": "This table contains information about pilots.", "name": "Pilot"}, {"classname": "CrewMember", "code": "class CrewMember(Base):\n    __tablename__ = 'crew_member'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    position = Column(String)\n    flight_id = Column(Integer, ForeignKey('flight.id'))", "description": "This table consists of crew members working on flights.", "name": "CrewMember"}, {"classname": "Booking", "code": "class Booking(Base):\n    __tablename__ = 'booking'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    passenger_id = Column(Integer, ForeignKey('passenger.id'))\n    flight_id = Column(Integer, ForeignKey('flight.id'))\n    status = Column(String)\n    booking_date = Column(Date)", "description": "This table stores booking information.", "name": "Booking"}, {"classname": "Baggage", "code": "class Baggage(Base):\n    __tablename__ = 'baggage'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    passenger_id = Column(Integer, ForeignKey('passenger.id'))\n    weight = Column(Integer)\n    baggage_type = Column(String)", "description": "This table records baggage details for passengers.", "name": "Baggage"}, {"classname": "Airline", "code": "class Airline(Base):\n    __tablename__ = 'airline'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    name = Column(String)\n    code = Column(String(3))", "description": "This table provides details about different airlines.", "name": "Airline"}, {"classname": "PilotLicense", "code": "class PilotLicense(Base):\n    __tablename__ = 'pilot_license'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    pilot_id = Column(Integer, ForeignKey('pilot.id'))\n    license_type = Column(String)\n    expiry_date = Column(Date)", "description": "This table contains license details for pilots.", "name": "PilotLicense"}, {"classname": "AircraftMaintenance", "code": "class AircraftMaintenance(Base):\n    __tablename__ = 'aircraft_maintenance'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    aircraft_id = Column(Integer, ForeignKey('aircraft.id'))\n    date_of_maintenance = Column(Date)\n    next_due_date = Column(Date)\n    remarks = Column(String)", "description": "This table logs maintenance details of aircraft.", "name": "AircraftMaintenance"}, {"classname": "AirportFacility", "code": "class AirportFacility(Base):\n    __tablename__ = 'airport_facility'\n    id = Column(Integer, primary_key=True, autoincrement=True)\n    airport_id = Column(Integer, ForeignKey('airport.id'))\n    facility_type = Column(String)\n    description = Column(String)", "description": "Records various facilities available at airpots.", "name": "AirportFacility"}], "rules": [{"name": "Passenger Count on Flight", "description": "Derive the number of passengers on a flight.", "use_case": "General", "entity": "Flight", "code": "Rule.count(derive=Flight.passenger_count, as_count_of=Passenger)"}, {"name": "Seating Capacity Constraint", "description": "Ensure that the number of passengers does not exceed the aircraft seating capacity.", "use_case": "General", "entity": "Flight", "code": "Rule.constraint(validate=Flight, as_condition=lambda row: row.passenger_count <= row.aircraft.seating_capacity, error_msg=\"Flight passenger count ({row.passenger_count}) exceeds aircraft seating capacity ({row.aircraft.seating_capacity})\")"}], "test_data": "\"\"\"Create test data for all tables.\"\"\" \"\"\"\n# Airports\nairport_1 = Airport(id=1, name=\"JFK International\", location=\"New York, USA\", code=\"JFK\")\nairport_2 = Airport(id=2, name=\"Los Angeles International\", location=\"Los Angeles, USA\", code=\"LAX\")\nairport_3 = Airport(id=3, name=\"Heathrow\", location=\"London, UK\", code=\"LHR\")\nairport_4 = Airport(id=4, name=\"Tokyo Haneda\", location=\"Tokyo, Japan\", code=\"HND\")\n# Flights\nflight_1 = Flight(id=1, flight_number=\"AA100\", departure_airport_id=1, arrival_airport_id=2, scheduled_departure=date(2023, 10, 1), scheduled_arrival=date(2023, 10, 1), aircraft_id=1)\nflight_2 = Flight(id=2, flight_number=\"BA256\", departure_airport_id=3, arrival_airport_id=1, scheduled_departure=date(2023, 10, 2), scheduled_arrival=date(2023, 10, 2), aircraft_id=2)\nflight_3 = Flight(id=3, flight_number=\"JL789\", departure_airport_id=4, arrival_airport_id=3, scheduled_departure=date(2023, 10, 3), scheduled_arrival=date(2023, 10, 3), aircraft_id=3)\nflight_4 = Flight(id=4, flight_number=\"QF11\", departure_airport_id=2, arrival_airport_id=4, scheduled_departure=date(2023, 10, 4), scheduled_arrival=date(2023, 10, 4), aircraft_id=4)\n# Aircrafts\naircraft_1 = Aircraft(id=1, model=\"Boeing 777\", seating_capacity=300)\naircraft_2 = Aircraft(id=2, model=\"Airbus A380\", seating_capacity=500)\naircraft_3 = Aircraft(id=3, model=\"Boeing 787\", seating_capacity=250)\naircraft_4 = Aircraft(id=4, model=\"Airbus A320\", seating_capacity=180)\n# Passengers\npassenger_1 = Passenger(id=1, name=\"John Doe\", passport_number=\"A1234567\", birthdate=date(1985, 5, 20), flight_id=1)\npassenger_2 = Passenger(id=2, name=\"Jane Smith\", passport_number=\"B7654321\", birthdate=date(1990, 8, 15), flight_id=1)\npassenger_3 = Passenger(id=3, name=\"Alice Brown\", passport_number=\"C2345678\", birthdate=date(1992, 1, 10), flight_id=2)\npassenger_4 = Passenger(id=4, name=\"Bob Johnson\", passport_number=\"D8765432\", birthdate=date(1988, 7, 25), flight_id=2)\n# Pilots\npilot_1 = Pilot(id=1, name=\"Captain Lewis\", license_number=\"PL789123\", years_of_experience=15)\npilot_2 = Pilot(id=2, name=\"Captain Clarke\", license_number=\"PL456789\", years_of_experience=20)\npilot_3 = Pilot(id=3, name=\"Captain Adams\", license_number=\"PL123456\", years_of_experience=10)\npilot_4 = Pilot(id=4, name=\"Captain Edwards\", license_number=\"PL987654\", years_of_experience=5)\n# Crew Members\ncrew_member_1 = CrewMember(id=1, name=\"Kelly Williams\", position=\"Flight Attendant\", flight_id=1)\ncrew_member_2 = CrewMember(id=2, name=\"Peter Clark\", position=\"Co-Pilot\", flight_id=2)\ncrew_member_3 = CrewMember(id=3, name=\"Susan Taylor\", position=\"Navigator\", flight_id=3)\ncrew_member_4 = CrewMember(id=4, name=\"Tom Hanks\", position=\"Flight Engineer\", flight_id=4)\n# Bookings\nbooking_1 = Booking(id=1, passenger_id=1, flight_id=1, status=\"Confirmed\", booking_date=date(2023, 9, 1))\nbooking_2 = Booking(id=2, passenger_id=2, flight_id=1, status=\"Cancelled\", booking_date=date(2023, 9, 5))\nbooking_3 = Booking(id=3, passenger_id=3, flight_id=2, status=\"Confirmed\", booking_date=date(2023, 9, 6))\nbooking_4 = Booking(id=4, passenger_id=4, flight_id=2, status=\"Pending\", booking_date=date(2023, 9, 10))\n# Baggage\nbaggage_1 = Baggage(id=1, passenger_id=1, weight=20, baggage_type=\"Checked\")\nbaggage_2 = Baggage(id=2, passenger_id=2, weight=15, baggage_type=\"Carry-On\")\nbaggage_3 = Baggage(id=3, passenger_id=3, weight=25, baggage_type=\"Checked\")\nbaggage_4 = Baggage(id=4, passenger_id=4, weight=17, baggage_type=\"Carry-On\")\n# Airlines\nairline_1 = Airline(id=1, name=\"American Airlines\", code=\"AA\")\nairline_2 = Airline(id=2, name=\"British Airways\", code=\"BA\")\nairline_3 = Airline(id=3, name=\"Japan Airlines\", code=\"JL\")\nairline_4 = Airline(id=4, name=\"Qantas\", code=\"QF\")\n# Pilot Licenses\npilot_license_1 = PilotLicense(id=1, pilot_id=1, license_type=\"Commercial\", expiry_date=date(2025, 5, 20))\npilot_license_2 = PilotLicense(id=2, pilot_id=2, license_type=\"ATPL\", expiry_date=date(2026, 8, 15))\npilot_license_3 = PilotLicense(id=3, pilot_id=3, license_type=\"Commercial\", expiry_date=date(2024, 1, 10))\npilot_license_4 = PilotLicense(id=4, pilot_id=4, license_type=\"PPL\", expiry_date=date(2025, 7, 25))\n# Aircraft Maintenances\naircraft_maintenance_1 = AircraftMaintenance(id=1, aircraft_id=1, date_of_maintenance=date(2023, 9, 10), next_due_date=date(2024, 9, 10), remarks=\"Engine check\")\naircraft_maintenance_2 = AircraftMaintenance(id=2, aircraft_id=2, date_of_maintenance=date(2023, 8, 20), next_due_date=date(2024, 8, 20), remarks=\"Tyre replacement\")\naircraft_maintenance_3 = AircraftMaintenance(id=3, aircraft_id=3, date_of_maintenance=date(2023, 7, 15), next_due_date=date(2024, 7, 15), remarks=\"Hydraulic system check\")\naircraft_maintenance_4 = AircraftMaintenance(id=4, aircraft_id=4, date_of_maintenance=date(2023, 6, 25), next_due_date=date(2024, 6, 25), remarks=\"Avionics update\")\n# Airport Facilities\nairport_facility_1 = AirportFacility(id=1, airport_id=1, facility_type=\"Lounge\", description=\"VIP Lounge\")\nairport_facility_2 = AirportFacility(id=2, airport_id=2, facility_type=\"Parking\", description=\"Long-term parking\")\nairport_facility_3 = AirportFacility(id=3, airport_id=3, facility_type=\"WiFi\", description=\"Free internet access\")\nairport_facility_4 = AirportFacility(id=4, airport_id=4, facility_type=\"Shopping\", description=\"Duty-free shops\")", "test_data_rows": [{"test_data_row_variable": "airport_1", "code": "airport_1 = Airport(id=1, name=\"JFK International\", location=\"New York, USA\", code=\"JFK\")"}, {"test_data_row_variable": "airport_2", "code": "airport_2 = Airport(id=2, name=\"Los Angeles International\", location=\"Los Angeles, USA\", code=\"LAX\")"}, {"test_data_row_variable": "airport_3", "code": "airport_3 = Airport(id=3, name=\"Heathrow\", location=\"London, UK\", code=\"LHR\")"}, {"test_data_row_variable": "airport_4", "code": "airport_4 = Airport(id=4, name=\"Tokyo Haneda\", location=\"Tokyo, Japan\", code=\"HND\")"}, {"test_data_row_variable": "flight_1", "code": "flight_1 = Flight(id=1, flight_number=\"AA100\", departure_airport_id=1, arrival_airport_id=2, scheduled_departure=date(2023, 10, 1), scheduled_arrival=date(2023, 10, 1), aircraft_id=1)"}, {"test_data_row_variable": "flight_2", "code": "flight_2 = Flight(id=2, flight_number=\"BA256\", departure_airport_id=3, arrival_airport_id=1, scheduled_departure=date(2023, 10, 2), scheduled_arrival=date(2023, 10, 2), aircraft_id=2)"}, {"test_data_row_variable": "flight_3", "code": "flight_3 = Flight(id=3, flight_number=\"JL789\", departure_airport_id=4, arrival_airport_id=3, scheduled_departure=date(2023, 10, 3), scheduled_arrival=date(2023, 10, 3), aircraft_id=3)"}, {"test_data_row_variable": "flight_4", "code": "flight_4 = Flight(id=4, flight_number=\"QF11\", departure_airport_id=2, arrival_airport_id=4, scheduled_departure=date(2023, 10, 4), scheduled_arrival=date(2023, 10, 4), aircraft_id=4)"}, {"test_data_row_variable": "aircraft_1", "code": "aircraft_1 = Aircraft(id=1, model=\"Boeing 777\", seating_capacity=300)"}, {"test_data_row_variable": "aircraft_2", "code": "aircraft_2 = Aircraft(id=2, model=\"Airbus A380\", seating_capacity=500)"}, {"test_data_row_variable": "aircraft_3", "code": "aircraft_3 = Aircraft(id=3, model=\"Boeing 787\", seating_capacity=250)"}, {"test_data_row_variable": "aircraft_4", "code": "aircraft_4 = Aircraft(id=4, model=\"Airbus A320\", seating_capacity=180)"}, {"test_data_row_variable": "passenger_1", "code": "passenger_1 = Passenger(id=1, name=\"John Doe\", passport_number=\"A1234567\", birthdate=date(1985, 5, 20), flight_id=1)"}, {"test_data_row_variable": "passenger_2", "code": "passenger_2 = Passenger(id=2, name=\"Jane Smith\", passport_number=\"B7654321\", birthdate=date(1990, 8, 15), flight_id=1)"}, {"test_data_row_variable": "passenger_3", "code": "passenger_3 = Passenger(id=3, name=\"Alice Brown\", passport_number=\"C2345678\", birthdate=date(1992, 1, 10), flight_id=2)"}, {"test_data_row_variable": "passenger_4", "code": "passenger_4 = Passenger(id=4, name=\"Bob Johnson\", passport_number=\"D8765432\", birthdate=date(1988, 7, 25), flight_id=2)"}, {"test_data_row_variable": "pilot_1", "code": "pilot_1 = Pilot(id=1, name=\"Captain Lewis\", license_number=\"PL789123\", years_of_experience=15)"}, {"test_data_row_variable": "pilot_2", "code": "pilot_2 = Pilot(id=2, name=\"Captain Clarke\", license_number=\"PL456789\", years_of_experience=20)"}, {"test_data_row_variable": "pilot_3", "code": "pilot_3 = Pilot(id=3, name=\"Captain Adams\", license_number=\"PL123456\", years_of_experience=10)"}, {"test_data_row_variable": "pilot_4", "code": "pilot_4 = Pilot(id=4, name=\"Captain Edwards\", license_number=\"PL987654\", years_of_experience=5)"}, {"test_data_row_variable": "crew_member_1", "code": "crew_member_1 = CrewMember(id=1, name=\"Kelly Williams\", position=\"Flight Attendant\", flight_id=1)"}, {"test_data_row_variable": "crew_member_2", "code": "crew_member_2 = CrewMember(id=2, name=\"Peter Clark\", position=\"Co-Pilot\", flight_id=2)"}, {"test_data_row_variable": "crew_member_3", "code": "crew_member_3 = CrewMember(id=3, name=\"Susan Taylor\", position=\"Navigator\", flight_id=3)"}, {"test_data_row_variable": "crew_member_4", "code": "crew_member_4 = CrewMember(id=4, name=\"Tom Hanks\", position=\"Flight Engineer\", flight_id=4)"}, {"test_data_row_variable": "booking_1", "code": "booking_1 = Booking(id=1, passenger_id=1, flight_id=1, status=\"Confirmed\", booking_date=date(2023, 9, 1))"}, {"test_data_row_variable": "booking_2", "code": "booking_2 = Booking(id=2, passenger_id=2, flight_id=1, status=\"Cancelled\", booking_date=date(2023, 9, 5))"}, {"test_data_row_variable": "booking_3", "code": "booking_3 = Booking(id=3, passenger_id=3, flight_id=2, status=\"Confirmed\", booking_date=date(2023, 9, 6))"}, {"test_data_row_variable": "booking_4", "code": "booking_4 = Booking(id=4, passenger_id=4, flight_id=2, status=\"Pending\", booking_date=date(2023, 9, 10))"}, {"test_data_row_variable": "baggage_1", "code": "baggage_1 = Baggage(id=1, passenger_id=1, weight=20, baggage_type=\"Checked\")"}, {"test_data_row_variable": "baggage_2", "code": "baggage_2 = Baggage(id=2, passenger_id=2, weight=15, baggage_type=\"Carry-On\")"}, {"test_data_row_variable": "baggage_3", "code": "baggage_3 = Baggage(id=3, passenger_id=3, weight=25, baggage_type=\"Checked\")"}, {"test_data_row_variable": "baggage_4", "code": "baggage_4 = Baggage(id=4, passenger_id=4, weight=17, baggage_type=\"Carry-On\")"}, {"test_data_row_variable": "airline_1", "code": "airline_1 = Airline(id=1, name=\"American Airlines\", code=\"AA\")"}, {"test_data_row_variable": "airline_2", "code": "airline_2 = Airline(id=2, name=\"British Airways\", code=\"BA\")"}, {"test_data_row_variable": "airline_3", "code": "airline_3 = Airline(id=3, name=\"Japan Airlines\", code=\"JL\")"}, {"test_data_row_variable": "airline_4", "code": "airline_4 = Airline(id=4, name=\"Qantas\", code=\"QF\")"}, {"test_data_row_variable": "pilot_license_1", "code": "pilot_license_1 = PilotLicense(id=1, pilot_id=1, license_type=\"Commercial\", expiry_date=date(2025, 5, 20))"}, {"test_data_row_variable": "pilot_license_2", "code": "pilot_license_2 = PilotLicense(id=2, pilot_id=2, license_type=\"ATPL\", expiry_date=date(2026, 8, 15))"}, {"test_data_row_variable": "pilot_license_3", "code": "pilot_license_3 = PilotLicense(id=3, pilot_id=3, license_type=\"Commercial\", expiry_date=date(2024, 1, 10))"}, {"test_data_row_variable": "pilot_license_4", "code": "pilot_license_4 = PilotLicense(id=4, pilot_id=4, license_type=\"PPL\", expiry_date=date(2025, 7, 25))"}, {"test_data_row_variable": "aircraft_maintenance_1", "code": "aircraft_maintenance_1 = AircraftMaintenance(id=1, aircraft_id=1, date_of_maintenance=date(2023, 9, 10), next_due_date=date(2024, 9, 10), remarks=\"Engine check\")"}, {"test_data_row_variable": "aircraft_maintenance_2", "code": "aircraft_maintenance_2 = AircraftMaintenance(id=2, aircraft_id=2, date_of_maintenance=date(2023, 8, 20), next_due_date=date(2024, 8, 20), remarks=\"Tyre replacement\")"}, {"test_data_row_variable": "aircraft_maintenance_3", "code": "aircraft_maintenance_3 = AircraftMaintenance(id=3, aircraft_id=3, date_of_maintenance=date(2023, 7, 15), next_due_date=date(2024, 7, 15), remarks=\"Hydraulic system check\")"}, {"test_data_row_variable": "aircraft_maintenance_4", "code": "aircraft_maintenance_4 = AircraftMaintenance(id=4, aircraft_id=4, date_of_maintenance=date(2023, 6, 25), next_due_date=date(2024, 6, 25), remarks=\"Avionics update\")"}, {"test_data_row_variable": "airport_facility_1", "code": "airport_facility_1 = AirportFacility(id=1, airport_id=1, facility_type=\"Lounge\", description=\"VIP Lounge\")"}, {"test_data_row_variable": "airport_facility_2", "code": "airport_facility_2 = AirportFacility(id=2, airport_id=2, facility_type=\"Parking\", description=\"Long-term parking\")"}, {"test_data_row_variable": "airport_facility_3", "code": "airport_facility_3 = AirportFacility(id=3, airport_id=3, facility_type=\"WiFi\", description=\"Free internet access\")"}, {"test_data_row_variable": "airport_facility_4", "code": "airport_facility_4 = AirportFacility(id=4, airport_id=4, facility_type=\"Shopping\", description=\"Duty-free shops\")"}], "test_data_sqlite": "INSERT INTO airport (id, name, location, code) VALUES (1, 'JFK International', 'New York, USA', 'JFK');INSERT INTO flight (id, flight_number, departure_airport_id, arrival_airport_id, scheduled_departure, scheduled_arrival, aircraft_id) VALUES (1, 'AA100', 1, 2, '2023-10-01 00:00:00', '2023-10-01 00:00:00', 1);INSERT INTO aircraft (id, model, seating_capacity) VALUES (1, 'Boeing 777', 300);INSERT INTO passenger (id, name, passport_number, birthdate, flight_id) VALUES (1, 'John Doe', 'A1234567', '1985-05-20', 1);", "name": "AviationManagementSystem"}, "security": "None", "repository": "https://github.com/apifabric/Aviation-System.git", "log": "2025-01-23 09:38:07 Generating..\n2025-01-23 09:39:10 Project Created..\n2025-01-23 09:39:11 Creating sample data..\n2025-01-23 09:39:14 Verifying Rules..\n", "cost": "None", "user_id": "public", "parent_id": "01JJ985D42M41MD4F79K9P5C3W", "started": "None", "created_at": "2025-01-23 09:37:30.722349", "last_access": "None", "download": "/download_project/01JJ98C7JKSFXQS61M2BT8RCXP", "running": "379", "display_name": "AviationManagementSystem", "link": "/01JJ98C7JKSFXQS61M2BT8RCXP/admin-app/index.html#/?raSpa"}
