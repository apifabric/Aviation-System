"models":
- "classname": |-
    Airport
  "code": |-
    class Airport(Base):
        __tablename__ = 'airport'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        code = Column(String)
        city = Column(String)
        country = Column(String)
        latitude = Column(Decimal)
        longitude = Column(Decimal)
  "description": |-
    Represents an airport entity.
  "name": |-
    Airport
- "classname": |-
    Airplane
  "code": |
    class Airplane(Base):
        __tablename__ = 'airplane'

        id = Column(Integer, primary_key=True, autoincrement=True)
        model = Column(String)
        seating_capacity = Column(Integer)
        passenger_count = Column(Integer)  # derived
  "description": |-
    Represents an airplane entity.
  "name": |-
    Airplane
- "classname": |-
    Passenger
  "code": |
    class Passenger(Base):
        __tablename__ = 'passenger'

        id = Column(Integer, primary_key=True, autoincrement=True)
        name = Column(String)
        email = Column(String)
        luggage_weight_total = Column(Decimal)  # derived attribute, corrected
        airplane_id = Column(Integer, ForeignKey('airplane.id'))
  "description": |-
    Represents a passenger entity with a link to airplane.
  "name": |-
    Passenger
- "classname": |-
    Luggage
  "code": |
    class Luggage(Base):
        __tablename__ = 'luggage'

        id = Column(Integer, primary_key=True, autoincrement=True)
        passenger_id = Column(Integer, ForeignKey('passenger.id'))
        weight = Column(Decimal)
  "description": |-
    Represents luggage linked to a passenger.
  "name": |-
    Luggage
"name": |-
  AirportSystem
"rules":
- "code": |-
    Rule.sum(derive=Passenger.luggage_weight_total, as_sum_of=Luggage.weight)
  "description": |-
    Sum total luggage weight for each passenger.
  "entity": |-
    Passenger
  "name": |-
    Sum Luggage Weight
  "use_case": |-
    General
- "code": |-
    Rule.constraint(validate=Airplane, as_condition=lambda row: row.passenger_count <= row.seating_capacity, error_msg="Airplane value total ({row.passenger_count}) exceeds limit ({row.seating_capacity})")
  "description": |-
    A airplane's passengers must be less than its seating capacity.
  "entity": |-
    Airplane
  "name": |-
    Passenger count Constraint
  "use_case": |-
    General
"test_data": |-
  Creating 4 rows of test data for each model.
"test_data_rows":
- "code": |-
    airport1 = Airport(name="Heathrow", code="LHR", city="London", country="UK", latitude=Decimal('51.47'), longitude=Decimal('-0.454'))
  "test_data_row_variable": |-
    airport1
- "code": |-
    airport2 = Airport(name="JFK", code="JFK", city="New York", country="USA", latitude=Decimal('40.6413'), longitude=Decimal('-73.7781'))
  "test_data_row_variable": |-
    airport2
- "code": |-
    airport3 = Airport(name="Haneda", code="HND", city="Tokyo", country="Japan", latitude=Decimal('35.5522'), longitude=Decimal('139.7798'))
  "test_data_row_variable": |-
    airport3
- "code": |-
    airport4 = Airport(name="Schiphol", code="AMS", city="Amsterdam", country="Netherlands", latitude=Decimal('52.3105'), longitude=Decimal('4.7683'))
  "test_data_row_variable": |-
    airport4
- "code": |-
    airplane1 = Airplane(model="Boeing 777-200", seating_capacity=300, passenger_count=290)
  "test_data_row_variable": |-
    airplane1
- "code": |-
    airplane2 = Airplane(model="Airbus A320", seating_capacity=150, passenger_count=148)
  "test_data_row_variable": |-
    airplane2
- "code": |-
    airplane3 = Airplane(model="Boeing 737", seating_capacity=200, passenger_count=198)
  "test_data_row_variable": |-
    airplane3
- "code": |-
    airplane4 = Airplane(model="Airbus A380", seating_capacity=500, passenger_count=480)
  "test_data_row_variable": |-
    airplane4
- "code": |-
    passenger1 = Passenger(name="John Doe", email="johndoe@example.com", luggage_weight_total=Decimal('25.5'), airplane_id=1)
  "test_data_row_variable": |-
    passenger1
- "code": |-
    passenger2 = Passenger(name="Jane Smith", email="janesmith@example.com", luggage_weight_total=Decimal('22.0'), airplane_id=1)
  "test_data_row_variable": |-
    passenger2
- "code": |-
    passenger3 = Passenger(name="Alice Brown", email="alicebrown@example.com", luggage_weight_total=Decimal('30.0'), airplane_id=2)
  "test_data_row_variable": |-
    passenger3
- "code": |-
    passenger4 = Passenger(name="Bob White", email="bobwhite@example.com", luggage_weight_total=Decimal('18.0'), airplane_id=2)
  "test_data_row_variable": |-
    passenger4
- "code": |-
    luggage1 = Luggage(passenger_id=1, weight=Decimal('5.5'))
  "test_data_row_variable": |-
    luggage1
- "code": |-
    luggage2 = Luggage(passenger_id=1, weight=Decimal('3.0'))
  "test_data_row_variable": |-
    luggage2
- "code": |-
    luggage3 = Luggage(passenger_id=2, weight=Decimal('8.0'))
  "test_data_row_variable": |-
    luggage3
- "code": |-
    luggage4 = Luggage(passenger_id=2, weight=Decimal('14.0'))
  "test_data_row_variable": |-
    luggage4
"test_data_sqlite": ""
